#
# JBZoo Toolbox - Csv-Blueprint.
#
# This file is part of the JBZoo Toolbox project.
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.
#
# @license    MIT
# @copyright  Copyright (C) JBZoo.com, All rights reserved.
# @see        https://github.com/JBZoo/Csv-Blueprint
#

name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - 'master'

# We want to avoid copy-pasting the same commands and add control over the environment
env:
  BLUEPRINT: |
    time ./csv-blueprint
  BLUEPRINT_PHAR: |
    time ./build/csv-blueprint.phar
  BLUEPRINT_DOCKER: |
    time docker run --rm
    --workdir=/parent-host
    -v .:/parent-host
    jbzoo/csv-blueprint:local
  CMD_VALIDATE: |
    validate:csv --ansi -vvv
  VALID_TEST: |
    --csv=./tests/fixtures/demo.csv
    --schema=./tests/schemas/demo_valid.yml
  INVALID_TEST: |
    --csv=./tests/fixtures/batch/*.csv
    --schema=./tests/schemas/demo_*.yml
    --schema=./tests/schemas/invalid_schema.yml


jobs:
  test-current-versions:
    name: Tests - Current Libs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          coverage: xdebug
          tools: composer
          extensions: ast

      - name: Build the Project
        run: make build

      - name: üß™ PHPUnit Tests
        run: make test

      - name: üëç Code Quality
        run: make codestyle

      - name: üìù Build Reports
        run: make report-all

      - name: Uploading coverage to coveralls
        continue-on-error: true
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make report-coveralls || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Tests - Current Versions
          path: build/


  test-lowest-versions:
    name: Tests - Lowest Versions
    runs-on: ubuntu-latest
    env:
      JBZOO_COMPOSER_UPDATE_FLAGS: '--prefer-lowest'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer
          extensions: ast

      - name: Build the Project
        run: make update

      - name: üß™ PHPUnit Tests
        run: make test

      - name: üëç Code Quality
        run: make codestyle

      - name: üìù Build Reports
        run: make report-all

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Tests - Lowest Versions
          path: build/


  test-latest-libs:
    name: Tests - Latest Versions
    runs-on: ubuntu-latest
    env:
      JBZOO_COMPOSER_UPDATE_FLAGS: '--with-all-dependencies'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer
          extensions: ast

      - name: Build the Project
        run: make update

      - name: üß™ PHPUnit Tests
        run: make test

      - name: üëç Code Quality
        run: make codestyle

      - name: üìù Build Reports
        run: make report-all

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Tests - Latest Versions
          path: build/


  test-php-binary:
    name: Verify PHP binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer

      - name: Build the project in production mode
        run: make build-prod

      - name: Test help and logo
        run: $BLUEPRINT --ansi -vvv

      - name: üëç Valid CSV file
        run: $BLUEPRINT $CMD_VALIDATE $VALID_TEST

      - name: üëé Invalid CSV file
        run: |
          ! $BLUEPRINT $CMD_VALIDATE $INVALID_TEST

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Verify PHP binary
          path: build/


  test-phar-binary:
    name: Verify PHAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer

      - name: Build the project in production mode
        run: make build-prod build-phar-file

      - name: Test help and logo
        run: $BLUEPRINT_PHAR --ansi -vvv

      - name: üëç Valid CSV file
        run: $BLUEPRINT_PHAR $CMD_VALIDATE $VALID_TEST

      - name: üëé Invalid CSV file
        run: |
          ! $BLUEPRINT_PHAR $CMD_VALIDATE $INVALID_TEST

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Verify PHAR
          path: build/


  docker:
    name: Verify Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: üê≥ Building Docker Image
        run: make build-docker

      - name: Test help and logo
        run: $BLUEPRINT_DOCKER --ansi -vvv

      - name: üëç Valid CSV file
        run: $BLUEPRINT_DOCKER $CMD_VALIDATE $VALID_TEST

      - name: üëé Invalid CSV file
        run: |
          ! $BLUEPRINT_DOCKER $CMD_VALIDATE $INVALID_TEST
