#
# JBZoo Toolbox - Csv-Blueprint.
#
# This file is part of the JBZoo Toolbox project.
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.
#
# @license    MIT
# @copyright  Copyright (C) JBZoo.com, All rights reserved.
# @see        https://github.com/JBZoo/Csv-Blueprint
#

# File contains just ideas. It's invalid!

# Include another schemas
includes: # Alias is always required
  - /path/schema_1.yml   as alias_1   # Full path to another schema.
  - ./path/schema_2.yml  as alias_2   # Relative path based on the current schema path.
  - ../path/schema_3.yml as alias_3   # Relative path based on the current schema path. Go up one level.


csv: # How to parse file before validation
  inherit: alias_1                    # Inherited from another schema. Options above will overwrite inherited options.
  null_values: [ "none", "nil" ]      # List of values that will be treated as empty


structural_rules:
  duplicate_column_names: false       # Allow duplicate rows in the CSV file.
  columns_count_min: 3                # Minimum number of columns in the file. By default, it is equal to the number of columns in the schema.
  columns_count: 5                    # Exact number of columns in the file. By default, it is equal to the number of columns in the schema.
  columns_count_max: 5                # Minimum number of columns in the file. By default, it is equal to the number of columns in the schema.
  ignore_duplicate_rows: false        # If true, then duplicate rows will be ignored. Duplicate rows are rows that have the same values in all columns - 100% match.
  ends_with_newline: false            # If true, then the file must end with a newline character (\n).


columns:
  - null_values: # (Override csv\empty_values) List of values that will be treated as empty
      - ""
      - null
      - none
      - empty
      - nil
    # Multi prop
    multiple: true
    multiple_separator: "|"           # Separator for multiple values
    faker: [ faker_method arg1 arg2 ]   # Faker method with arguments

    rules:
      # https://github.com/Respect/Validation/blob/main/docs/08-list-of-rules-by-category.md
      is_bool_value: true             # https://github.com/Respect/Validation/blob/main/docs/rules/BoolVal.md
      is_null: true                   # see empty_values

      # Codes
      subdivision_code: [ ]           # https://github.com/Respect/Validation/blob/main/docs/rules/SubdivisionCode.md

      # ids
      is_bsn: true                    # Validates a Dutch citizen service number (BSN).
      is_cnh: true                    # Validates a Brazilian national health card number (CNH).
      is_cnpj: true                   # Validates a Brazilian company identifier (CNPJ).
      is_cpf: true                    # Validates a Brazilian individual taxpayer identifier (CPF).
      is_nfe_access_key: true         # Validates a Brazilian Nota Fiscal Eletronica (NFe) access key.
      is_pis: true                    # Validates a Brazilian individual social security number (PIS).
      is_hetu: true                   # Validates a Finnish personal identity code (HETU).
      is_nip: true                    # Validates a Polish taxpayer identification number (NIP).
      is_pesel: true                  # Validates a Polish national identification number (PESEL).
      is_polish_id_card: true         # Validates a Polish identity card number.
      is_portuguese_nif: true         # Validates a Portuguese taxpayer number (NIF).

      # Strings
      is_hex_rgb_color: true
      no_whitespace: true

      custom_func: callbak function


    aggregate_rules:
      # https://github.com/markrogoyski/math-php#statistics---averages
      truncated_mean: [ 1, 25 ]      # 25 percent of observations trimmed from each end of distribution
      generalized_mean: [ 1, 2 ]     # p-power mean
      power_mean: [ 1, 2 ]           # p-power mean
      lehmer_mean: [ 1, 3 ]          # p-power mean
      simple_moving_average: [ 1, n ]  # SMA
      cumulative_moving_average: 1   # CMA
      weighted_moving_average: [ 1, n, "weights[]" ]     # WMA
      exponential_moving_average: 1  # EPA

      custom_func: callbak function

  - inherit: alias_1\Column Name      # Inherited from another schema
    rules: # Overwrite rules from another schema
      true_values: [ true, 1, yes ]


complex_rules:
  - sum_by_group:
      group_column: 0
      sum_column: 1
  - handler: My\Complex\Rule          # Full name of PHP Class (with namespace)
    handler_args:
      - column:0
      - column:1
